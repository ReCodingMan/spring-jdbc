<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 配置 spring的 Ioc，把 service 对象配置进来-->
    <bean id="accountService" class="com.cc1021.service.impl.AccountServiceImpl"></bean>

    <!-- 配置 Logger 类 -->
    <bean id="logger" class="com.cc1021.utils.Logger"></bean>

    <!-- 配置 AOP -->
    <aop:config>
        <!-- 配置切面 -->
        <aop:aspect id="logAdvise" ref="logger">
            <!-- 配置通知的类型，并且建立通知方法和切入点方法的关联 -->
            <aop:before method="beforePrintLog" pointcut="execution(* com.cc1021.service.impl.*.*(..))"></aop:before>

            <!-- 配置通知的类型，并且建立通知方法和切入点方法的关联 -->
            <aop:after-returning method="afterReturningPrintLog" pointcut="execution(* com.cc1021.service.impl.*.*(..))"></aop:after-returning>

            <!-- 配置通知的类型，并且建立通知方法和切入点方法的关联 -->
            <aop:after-throwing method="afterThrowingPrintLog" pointcut="execution(* com.cc1021.service.impl.*.*(..))"></aop:after-throwing>

            <!-- 配置通知的类型，并且建立通知方法和切入点方法的关联 -->
            <aop:after method="afterPrintLog" pointcut="execution(* com.cc1021.service.impl.*.*(..))"></aop:after>
        </aop:aspect>
    </aop:config>
</beans>