<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 配置 spring的 Ioc，把 service 对象配置进来-->
    <bean id="accountService" class="com.cc1021.service.impl.AccountServiceImpl"></bean>

    <!-- spring 中基于 xml 的 AOP 配置步骤
        1、把通知 Bean 也交给 spring 来管理
        2、使用 aop:config 标签来表明开始 AOP 的配置
        3、使用 aop:aspect 标签表明配置切面
                id属性：是给切面提供一个唯一标识
                ref属性：是指定通知类 bean 的 Id。
        4、在 aop:aspect 标签的内部使用对应标签来配置通知的类型
            我们现在示例是让 printLog 方法在切入点方法执行之前：所以是前置通知
            aop:before：表示配置前置通知
                method 属性：用于指定 Logger 类中哪个方法是前置通知
                pointcut属性：用于指定切入点表达式，该表达式的含义指的是对业务层中哪些方法增强
                    切入点表达式的写法：
                        关键字：execution(表达式)
                        表达式：
                            访问修饰符 返回值 包名.包名.包名...类名.方法名(参数列表)
                        标准的表达式写法：
                            public void com.cc1021.service.impl.AccountServiceImpl.saveAccount()

    -->

    <!-- 配置 Logger 类 -->
    <bean id="logger" class="com.cc1021.utils.Logger"></bean>

    <!-- 配置 AOP -->
    <aop:config>
        <!-- 配置切面 -->
        <aop:aspect id="logAdvise" ref="logger">
            <!-- 配置通知的类型，并且建立通知方法和切入点方法的关联 -->
            <aop:before method="printLog" pointcut="execution(public void com.cc1021.service.impl.AccountServiceImpl.saveAccount())"></aop:before>
        </aop:aspect>
    </aop:config>
</beans>